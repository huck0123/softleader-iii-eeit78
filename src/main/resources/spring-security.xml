<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	
	<http auto-config="true" use-expressions="true">
 
		<intercept-url pattern="/admin*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/giver**/**" access="hasRole('ROLE_ADMIN')" />
<!-- 		<intercept-url pattern="/giver**/**" access="hasRole('ROLE_GIVER')" /> -->
 
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<form-login 
		    login-page="/login.jsp" 
		    default-target-url="/index.jsp" 
			authentication-failure-url="/login.jsp?error" 
			username-parameter="account"
			password-parameter="passwd" />
		<logout logout-success-url="/login.jsp?logout"  />
		<!-- enable csrf protection -->
<!-- 		<csrf/> -->
	</http>
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
<!-- 	  	<user-service> -->
<!-- 	  		<user name="administrator" password="12345" authorities="ROLE_ADMIN"/> -->
<!-- 	  	</user-service> -->
		
		
		<jdbc-user-service data-source-ref="dataSource"
		
		  users-by-username-query=
		    "select account, passwd, valid from admin where account=?"
		  authorities-by-username-query=
		    "select account, role from admin where account=?" />
<!-- 	    "select username, role from user_roles where username=?" /> -->
		 
<!-- 		<jdbc-user-service data-source-ref="dataSource" -->
<!-- 		 users-by-username-query= -->
<!-- 		 	"select account, passwd, valid from giver where account=?" -->
<!-- 		 authorities-by-username-query= -->
<!-- 		 	"select account, role from giver where account=?"/> -->
		 	
	  </authentication-provider>
	</authentication-manager>
	
</beans:beans>
